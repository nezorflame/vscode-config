{
    // "terminal.external.windowsExec": "wt.exe",
    // "terminal.external.osxExec": "iTerm.app",
    // "terminal.external.linuxExec": "tilix",
    // "terminal.integrated.shell.windows": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
    // "terminal.integrated.shell.osx": "/usr/local/bin/zsh",
    // "terminal.integrated.shell.linux": "/bin/zsh",
    // Fix potential lagging during rendering
    "terminal.integrated.rendererType": "auto",
    // Enable native tabs (macOS-only for now)
    // "window.nativeTabs": true,
    // Enable new context menu (Linux-only for now)
    // "window.titleBarStyle": "custom",
    "breadcrumbs.enabled": true,
    // Cascadia Code can be downloaded here: https://github.com/microsoft/cascadia-code
    "editor.fontFamily": "Cascadia Code PL",
    "editor.fontSize": 13,
    // Enable font ligatures (Cascadia Code PL supports them)
    "editor.fontLigatures": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.wordWrap": "on",
    "editor.renderControlCharacters": false,
    "editor.copyWithSyntaxHighlighting": true,
    "extensions.autoUpdate": true,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "telemetry.enableTelemetry": false,
    "window.zoomLevel": 0,
    "workbench.startupEditor": "newUntitledFile",
    // One Dark Pro theme
    "workbench.colorTheme": "One Dark Pro",
    // Material Icon Theme pack
    "workbench.iconTheme": "material-icon-theme",
    "files.associations": {
        "*.lock": "toml",
        "*.tpl": "gohtml",
        "CHANGELOG": "markdown",
        "README": "markdown",
        "Dockerfile*": "dockerfile"
    },
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/desktop.ini": true
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    // Golang templates
    "emmet.syntaxProfiles": {
        "tpl": "html"
    },
    "emmet.triggerExpansionOnTab": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    // Go-related settings for Go modules and gopls
    // =========================
    "go.autocompleteUnimportedPackages": true,
    "go.useCodeSnippetsOnFunctionSuggestWithoutType": true,
    "go.docsTool": "godoc", // this will be ignored if useLanguageServer is true
    "go.formatTool": "goimports", // this will be ignored if gopls has option '"format": true', see gopls section below
    // "go.formatFlags": [ // used for goimports-only
    //     "--local=github.com/your/repo"
    // ],
    // I suggest either golangci-lint or revive, see related configs in this repo
    "go.lintTool": "golangci-lint",
    // "go.lintTool": "revive",
    "go.lintFlags": [
        "--config=$YOUR_CONFIG_FOLDER/.golangci.yml"
        // "--config=$YOUR_CONFIG_FOLDER/revive.toml"
    ],
    "go.toolsEnvVars": {
        "GO111MODULE": "on"
    },
    "go.buildOnSave": "off",
    "go.vetOnSave": "off",
    "go.lintOnSave": "package", // use "workspace" if your project is small enough for linter to work fast
    "go.coverageDecorator": {
        "type": "gutter"
    },
    "go.coverageOptions": "showUncoveredCodeOnly",
    "go.coverOnTestPackage": true,
    "go.coverOnSingleTest": false,
    "go.testFlags": [
        "-v",
        "-cover"
        // "-count=1" - add this to remove test caching
    ],
    "go.addTags": {
        "tags": "json,sql",
        "options": "json=omitempty",
        "promptForTags": true,
        "transform": "snakecase"
    },
    "go.enableCodeLens": {
        "references": false,
        "runtest": true
    },
    // Delve debugger settings
    "go.delveConfig": {
        "dlvLoadConfig": {
            "followPointers": true,
            "maxVariableRecurse": 5,
            "maxStringLen": 500,
            "maxArrayValues": 100,
            "maxStructFields": -1
        },
        "apiVersion": 2,
        "showGlobalVariables": true
    },
    // LSP settings - see https://github.com/golang/tools/blob/master/gopls/doc/vscode.md
    "go.useLanguageServer": true,
    "go.languageServerExperimentalFeatures": {
        "diagnostics": true,
        "documentLink": false // to stop showing imports as the URLs to godoc
    },
    // uncomment if debug is needed
    // "go.languageServerFlags": [
    //     "-rpc.trace", // for more detailed debug logging
    //     "serve",
    //     "--debug=localhost:6060", // to investigate memory usage, see profiles 
    // ],
    "gopls": {
        // This is the set of flags passed on to the build system when invoked.
        // "buildFlags": "",
        // This can be used to add environment variables.
        // These will not affect `gopls` itself, but will be used for any external commands it invokes.
        // "env": {},
        // This controls the information that appears in the hover text.
        "hoverKind": "FullDocumentation",
        // This controls where documentation points to for given package in `textDocument/documentLink`.
        // If company chooses to use its own `godoc.org`, its address can be used as well.
        // "linkTarget": "pkg.go.dev",
        // This is the equivalent of the `goimports -local` flag.
        "local": "github.com/your/repo",
        // Add parameter placeholders when completing a function.
        "usePlaceholders": true
        // EXPERIMENTAL!
        // If false, indicates that the user does not want documentation with completion results.
        // "completionDocumentation": true,
        // If true, the completion engine is allowed to make suggestions for packages that you do not currently import.
        // "completeUnimported": false,
        // If true, this turns on the ability to return completions from deep inside relevant entities, rather than just the locally accessible ones.
        // "deepCompletion": true,
        // A list of the names of analysis passes that should be disabled.
        // "experimentalDisabledAnalyses": [],
        // If true, this enables server side fuzzy matching of completion candidates.
        // "fuzzyMatching": true,
        // This enables additional analyses with staticcheck.
        // Warning: This will significantly increase memory usage.
        // "staticcheck": false,
    },
    "[go]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
        "editor.defaultFormatter": "golang.go",
        "editor.formatOnSave": true,
        "editor.snippetSuggestions": "inline" // select "none" if you don't want snippets to be shown
    },
    "[go.mod]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
        "editor.formatOnSave": true
    },
    // Other extensions
    // =========================
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    },
    "[helm]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "yaml.format.enable": true,
    "todohighlight.isEnable": true,
    "todohighlight.include": [
        "**/*.go",
        "**/*.md"
    ],
    "todohighlight.exclude": [
        "**/node_modules/**",
        "**/bower_components/**",
        "**/dist/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/_output/**",
        "**/*.min.*",
        "**/*.map",
        "**/.next/**",
        "**/vendor/**"
    ]
}
