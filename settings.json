{
    // "terminal.external.windowsExec": "wt.exe",
    // "terminal.external.osxExec": "iTerm.app",
    // "terminal.external.linuxExec": "tilix",
    // "terminal.integrated.defaultProfile.windows": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
    // "terminal.integrated.defaultProfile.osx": "/usr/local/bin/zsh",
    // "terminal.integrated.defaultProfile.linux": "/bin/zsh",
    // Enable native tabs (macOS-only for now)
    // "window.nativeTabs": true,
    // Enable new context menu (Linux-only for now)
    // "window.titleBarStyle": "custom",
    "breadcrumbs.enabled": true,
    // Cascadia Code NF or other nerd fonts can be downloaded here: https://www.nerdfonts.com/font-downloads
    "editor.fontFamily": "CaskaydiaCove NF",
    "editor.fontSize": 13,
    // Enable font ligatures (Cascadia Code PL supports them)
    "editor.fontLigatures": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.wordWrap": "on",
    "editor.renderControlCharacters": false,
    "editor.copyWithSyntaxHighlighting": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "extensions.autoUpdate": true,
    "extensions.ignoreRecommendations": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    // Disable telemetry
    "telemetry.enableTelemetry": false,
    "workbench.startupEditor": "newUntitledFile",
    // One Dark Pro theme
    "workbench.colorTheme": "One Dark Pro",
    // Material Icon Theme pack
    "workbench.iconTheme": "material-icon-theme",
    "files.associations": {
        "*.lock": "toml",
        "*.tpl": "gohtml",
        "CHANGELOG": "markdown",
        "README": "markdown",
        "Dockerfile*": "dockerfile"
    },
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/desktop.ini": true
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    // Golang templates
    "emmet.syntaxProfiles": {
        "tpl": "html"
    },
    "emmet.triggerExpansionOnTab": true,
    "emmet.includeLanguages": {
        "jekyll": "html",
        "scss": "css"
    },
    // Git settings
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    // GitLens extension remotes
    "gitlens.remotes": [
        // {
        //     "name": "Some Bitbucket Server",
        //     "type": "BitbucketServer",
        //     "domain": "your.custom.domain",
        //     "protocol": "https",
        // },
    ],
    // Settings for remote work
    "remote.extensionKind": {
        "ms-azuretools.vscode-docker": "workspace"
    },
    // List your remotes' OS here
    "remote.SSH.remotePlatform": {
        // "my.ssh.server": "linux",
    },
    // Search exceptions
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/vendor": true
    },
    "go.lintTool": "golangci-lint",
    // "go.lintTool": "revive",
    "go.lintFlags": [
        "-v",
        // "--config=/your/gosrc/folder/.golangci.yml", // for golangci-lint
        // "--config=/your/gosrc/folder/.revive.toml",  // for revive
    ],
    // you can set "workspace" here for small/medium projects
    "go.lintOnSave": "package",
    // List your goproxy-related envs here
    "go.toolsEnvVars": {
        // "GOPROXY": "https://your.goproxy.server|https://proxy.golang.org,direct",
        // "GONOSUMDB": "company.module.prefix",
    },
    "go.coverageDecorator": {
        "type": "gutter"
    },
    "go.coverageOptions": "showUncoveredCodeOnly",
    "go.coverOnTestPackage": true,
    "go.coverOnSingleTest": false,
    "go.testFlags": [
        "-v",
        "-cover",
        // "-count=1", // enable this to disable test caching
    ],
    "go.addTags": {
        "tags": "json,db",
        "options": "json=omitempty",
        "promptForTags": true,
        "transform": "snakecase"
    },
    "go.enableCodeLens": {
        "runtest": true
    },
    // Delve settings - uncomment and set up as required
    // "go.delveConfig": {
    //     "dlvLoadConfig": {
    //         "followPointers": true,
    //         "maxVariableRecurse": 5,
    //         "maxStringLen": 100,
    //         "maxArrayValues": 50,
    //         "maxStructFields": -1
    //     },
    //     "apiVersion": 2,
    //     "showGlobalVariables": true,
    // },
    "[go]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
        "editor.defaultFormatter": "golang.go",
        "editor.formatOnSave": true,
        // Optional: disable snippets with 'none', as they conflict with completion ranking.
        "editor.snippetSuggestions": "inline",
    },
    "[go.mod]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
        "editor.formatOnSave": true,
    },
    "go.toolsManagement.autoUpdate": true,
    // LSP settings - see https://github.com/golang/tools/blob/master/gopls/doc/vscode.md
    "go.useLanguageServer": true,
    // uncomment if LSP debug is needed
    // "go.languageServerFlags": [
    //     "-rpc.trace", // for more detailed debug logging
    //     "serve",
    //     "--debug=localhost:6060", // to investigate memory usage, see profiles 
    // ],
    // gopls flags - see https://github.com/golang/tools/blob/master/gopls/doc/settings.md
    "gopls": {
        "build.experimentalWorkspaceModule": true,
        "formatting.gofumpt": true,
        "ui.completion.usePlaceholders": true,
        "ui.documentation.linksInHover": false,
        "ui.semanticTokens": true,
        // "formatting.local": "your/project/module" // you can also add this per-project
    },
    // ----------- Go-related settings end
    // Other extensions
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    },
    "[helm]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "redhat.telemetry.enabled": false,
    "yaml.schemas": {
        "file:///toc.schema.json": "/toc\\.yml/i"
    },
    "yaml.format.enable": true,
}
